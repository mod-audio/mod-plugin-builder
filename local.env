#!/bin/bash

#######################################################################################################################
# environment variables

WORKDIR=${WORKDIR:=~/mod-workdir}

#######################################################################################################################
# find path to this script

if [ -n "${BASH_SOURCE-}" ]; then
  CURRENT_SCRIPT="${BASH_SOURCE}"
elif [ -n "${ZSH_VERSION-}" ]; then
  CURRENT_SCRIPT="${(%):-%x}"
elif [ -n "${KSH_VERSION-}" ]; then
  CURRENT_SCRIPT=${.sh.file}
else
  CURRENT_SCRIPT=""
fi

if [ -n "${CURRENT_SCRIPT-}" ]; then
  SCRIPT_DIR=$(dirname "${CURRENT_SCRIPT}")
else
  SCRIPT_DIR="."
fi

#######################################################################################################################
# check arguments

PLATFORM=$1

if [ -z "${PLATFORM}" ] || [ ! -e "${SCRIPT_DIR}/plugins-dep/configs/${PLATFORM}_defconfig" ]; then
  echo "Usage: $0 <platform>"
  echo "  Where platform can be one of: $(echo $(ls "${SCRIPT_DIR}/plugins-dep/configs" | grep _defconfig | sed 's/_defconfig//g' | sort))"

else

#######################################################################################################################
# import defconfig variables

function DOWNLOAD_PATH  { echo ""; }
function TOOLCHAIN_PATH { echo ""; }

source "${SCRIPT_DIR}/plugins-dep/configs/${PLATFORM}_defconfig"

#######################################################################################################################
# setup directories

HOST_DIR="${WORKDIR}/${PLATFORM}/host"
STAGING_DIR="${WORKDIR}/${PLATFORM}/staging"
TARGET_DIR="${WORKDIR}/${PLATFORM}/target"
TOOLCHAIN_DIR="${WORKDIR}/${PLATFORM}/toolchain"

#######################################################################################################################
# setup compiler variables

export AR="${BR2_TOOLCHAIN_EXTERNAL_CUSTOM_PREFIX}-gcc-ar"
export CC="${BR2_TOOLCHAIN_EXTERNAL_CUSTOM_PREFIX}-gcc"
export CPP="${BR2_TOOLCHAIN_EXTERNAL_CUSTOM_PREFIX}-cpp"
export CXX="${BR2_TOOLCHAIN_EXTERNAL_CUSTOM_PREFIX}-g++"
export LD="${BR2_TOOLCHAIN_EXTERNAL_CUSTOM_PREFIX}-ld"
export RANLIB="${BR2_TOOLCHAIN_EXTERNAL_CUSTOM_PREFIX}-ranlib"
export STRIP="${BR2_TOOLCHAIN_EXTERNAL_CUSTOM_PREFIX}-strip"

export PATH="${HOST_DIR}/usr/bin":${PATH}
export PKG_CONFIG_PATH="${STAGING_DIR}/usr/lib/pkgconfig"

export CFLAGS="${BR2_TARGET_OPTIMIZATION} -I${STAGING_DIR}/usr/include"
export CXXFLAGS="${BR2_TARGET_OPTIMIZATION} -I${STAGING_DIR}/usr/include"
export LDFLAGS="${BR2_TARGET_LDFLAGS} -L${STAGING_DIR}/usr/lib"
unset CPPFLAGS

export HOST_DIR
export STAGING_DIR
export TARGET_DIR

export JUCE_6_0_TOOLCHAIN_FILE="${STAGING_DIR}/usr/lib/cmake/JUCE-6.0.8/toolchainfile.cmake"
export JUCE_6_1_TOOLCHAIN_FILE="${STAGING_DIR}/usr/lib/cmake/JUCE-6.1.6/toolchainfile.cmake"
export JUCE_7_0_TOOLCHAIN_FILE="${STAGING_DIR}/usr/lib/cmake/JUCE-7.0.9/toolchainfile.cmake"
export JUCE_8_0_TOOLCHAIN_FILE="${STAGING_DIR}/usr/lib/cmake/JUCE-8.0.4/toolchainfile.cmake"

alias ar=${AR}
alias cc=${CC}
alias cpp=${CPP}
alias gcc=${CC}
alias g++=${CXX}
alias ld=${ld}
alias strip=${strip}

CMAKE="cmake -DCMAKE_TOOLCHAIN_FILE='${HOST_DIR}/usr/share/mod-plugin-builder/toolchainfile.cmake'"
alias cmake="$CMAKE"

#######################################################################################################################

echo "Success! Environment is now ready to build stuff"

fi

#######################################################################################################################

unset CURRENT_SCRIPT
unset SCRIPT_DIR
